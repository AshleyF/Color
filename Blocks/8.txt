_multiply-step _samples 
 
 `load 
 
 :step ^dup 1 ^and `if ^drop ^over ^+ `else ^drop `then ^2/ `; 
 :* 7 `for ^2* `next ^over 7 `for step `next `; 
 
 :* ^a! 0 1f `for ^+* `next ^drop ^drop ^a `; _73 _inst, _139.9ns, _5 _cells 
 
 :* _30 _inst, _64.2ns, _10 _cells 
 	 ^a! ^+* ^+* ^+* ^+* ^+* ^+* ^+* ^+* ^+* ^+* ^+* ^+* ^+* ^+* ^+* ^+* 
 	 ^+* ^+* ^+* ^+* ^+* ^+* ^+* ^+* ^+* ^+* ^+* ^+* ^+* ^+* ^+* ^+* ^drop ^drop ^a `; 
 
 :* _51 _inst, _95.9ns, _6 _cells 
 	 ^a! 0 9 `for ^+* ^+* ^+* `next ^+* ^+* ^drop ^drop ^a `; 
 
 `init 
 
 	 0b0b 142a2d ^break * _= _deadbeef 
 	 3d 31 ^break * _= _bad